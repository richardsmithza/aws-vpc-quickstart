AWSTemplateFormatVersion: 2010-09-09
Description: VPC Quick Start (VPC, Route Tables, IGW, NGW, Subnets etc...)

Parameters:
  
  Name:
    Type: String
  
  VPCCIDR:
    Type: String
    Default: 10.20.0.0/16

  PublicSubnet1aCIDR:
    Type: String
    Default: 10.20.10.0/26

  PublicSubnet1bCIDR:
    Type: String
    Default: 10.20.11.0/26

  PrivateSubnet1aCIDR:
    Type: String
    Default: 10.20.20.0/26

  PrivateSubnet1bCIDR:
    Type: String
    Default: 10.20.21.0/26


Resources:

  QuickStartVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref Name
              - "vpc"
  
  QuickStartIPv6CIDR:
    Type: "AWS::EC2::VPCCidrBlock"
    Properties:
      AmazonProvidedIpv6CidrBlock: true
      VpcId: !Ref QuickStartVPC
  
  QuickStartIGW:
    Type: AWS::EC2::InternetGateway
    DependsOn: QuickStartVPC
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref Name
              - "igw"

  QuickStartAttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref QuickStartVPC
      InternetGatewayId: !Ref QuickStartIGW
  
  QuickStartPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref QuickStartVPC
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref Name
              - "public-rtb"

  QuickStartPublicIGWRoute:
    Type: AWS::EC2::Route
    DependsOn: QuickStartAttachIGW
    Properties:
       RouteTableId: !Ref QuickStartPublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref QuickStartIGW            
  
  QuickStartPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref QuickStartVPC
      Tags:
        - Key: Name
          Value: !Join
            - ":"
            - - !Ref Name
              - "private-rtb"
  
  # ------------------------------------------------------------------
  # Route Tables     
  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    DependsOn: QuickStartIPv6CIDR
    Properties:
      VpcId: !Ref QuickStartVPC
      CidrBlock: !Ref PublicSubnet1aCIDR
      Ipv6CidrBlock: !Sub
        - "${VpcPart}${SubnetPart}"
        - SubnetPart: 20::/64
          VpcPart: !Select [0, !Split ['00::/56', !Select [0,!GetAtt QuickStartVPC.Ipv6CidrBlocks]]]
      MapPublicIpOnLaunch: true
      AvailabilityZone: 
        Fn::Select: 
          - 0 # First AZ in list (1a)
          - Fn::GetAZs: "" 
      Tags:            
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref Name
              - "public-1a-sn"

  PublicSubnet1aRTAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1a
      RouteTableId: !Ref QuickStartPublicRouteTable            
  
  PublicSubnet1b:
    Type: AWS::EC2::Subnet
    DependsOn: QuickStartIPv6CIDR
    Properties:
      VpcId: !Ref QuickStartVPC
      CidrBlock: !Ref PublicSubnet1bCIDR
      Ipv6CidrBlock: !Sub
        - "${VpcPart}${SubnetPart}"
        - SubnetPart: 21::/64
          VpcPart: !Select [0, !Split ['00::/56', !Select [0,!GetAtt QuickStartVPC.Ipv6CidrBlocks]]]
      MapPublicIpOnLaunch: true
      AvailabilityZone: 
        Fn::Select: 
          - 0 # First AZ in list (1a)
          - Fn::GetAZs: "" 
      Tags:            
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref Name
              - "public-1b-sn"

  PublicSubnet1bRTAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1b
      RouteTableId: !Ref QuickStartPublicRouteTable    

  # Create NAT Gateway Public Subnet 1a
  Public1aNATGatewayEIP:
    DependsOn: QuickStartAttachIGW
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref Name
              - "ngw-1a-eip"

  Public1aNATGateway:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId:
         Fn::GetAtt:
         - Public1aNATGatewayEIP
         - AllocationId
      SubnetId: !Ref PublicSubnet1a
      Tags:
        - Key: Name
          Value: !Join
            - ":"
            - - !Ref Name
              - "public-1a-ngw"     
  
  # Add Route in the Private Route Table to Public NAT Gateway 1a
  PrivateNGWRoute:
   Type: AWS::EC2::Route
   Properties:
      RouteTableId: !Ref QuickStartPrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
         Ref: Public1aNATGateway

  # Private Subnet 1a
  PrivateSubnet1a:
    Type: AWS::EC2::Subnet
    DependsOn: QuickStartIPv6CIDR
    Properties:
      VpcId: !Ref QuickStartVPC
      CidrBlock: !Ref PrivateSubnet1aCIDR
      Ipv6CidrBlock: !Sub
        - "${VpcPart}${SubnetPart}"
        - SubnetPart: 10::/64
          VpcPart: !Select [0, !Split ['00::/56', !Select [0,!GetAtt QuickStartVPC.Ipv6CidrBlocks]]]
      AvailabilityZone: 
        Fn::Select: 
          - 0 # First AZ in list (1a)
          - Fn::GetAZs: "" 
      Tags:            
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref Name
              - "private-1a-sn"

  Private1aRTAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1a
      RouteTableId: !Ref QuickStartPrivateRouteTable  

# Private Subnet 1b
  PrivateSubnet1b:
    Type: AWS::EC2::Subnet
    DependsOn: QuickStartIPv6CIDR
    Properties:
      VpcId: !Ref QuickStartVPC
      CidrBlock: !Ref PrivateSubnet1bCIDR
      Ipv6CidrBlock: !Sub
        - "${VpcPart}${SubnetPart}"
        - SubnetPart: 11::/64
          VpcPart: !Select [0, !Split ['00::/56', !Select [0,!GetAtt QuickStartVPC.Ipv6CidrBlocks]]]
      AvailabilityZone: 
        Fn::Select: 
          - 1 # 2nd AZ in list (1b)
          - Fn::GetAZs: "" 
      Tags:            
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref Name
              - "private-1b-sn"

  Private1bRTAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1b
      RouteTableId: !Ref QuickStartPrivateRouteTable